// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package iservice

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	"github.com/FISCO-BCOS/go-sdk/event"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// IServiceMarketExABI is the input ABI used to generate the binding from.
const IServiceMarketExABI = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_schemas\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"ServiceBindingAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"ServiceBindingRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"ServiceBindingUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_schemas\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"addServiceBinding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"bindingIndices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bindings\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"schemas\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qos\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"getQoS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qos\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"getServiceBinding\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getServiceBindingCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"getServiceFee\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"fee\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"getServiceProvider\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"removeServiceBinding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"serviceBindingExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"updateServiceBinding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IServiceMarketExBin is the compiled bytecode used for deploying new contracts.
var IServiceMarketExBin = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c7c30d4a0f08950cb23be4132957b357fa5dfdb0fcf218f81b86a1c036e47d060405160405180910390a36126d2806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80635c3b35cb1161008c5780639b0a965c116100665780639b0a965c14610277578063eac81af8146102a7578063ede8e529146102d7578063f10b3735146102f5576100e9565b80635c3b35cb146101f35780637b6397fa1461022757806381b9269714610243576100e9565b806327e41750116100c857806327e4175014610159578063438166c61461018957806347b71720146101b95780635089e2c8146101d5576100e9565b80628a6d0b146100ee5780630a9bdf071461011f57806316cad12a1461013d575b600080fd5b61010860048036038101906101039190611d92565b610311565b60405161011692919061252a565b60405180910390f35b610127610358565b604051610134919061250f565b60405180910390f35b61015760048036038101906101529190611b83565b610365565b005b610173600480360381019061016e9190611d92565b6103b8565b60405161018091906122a0565b60405180910390f35b6101a3600480360381019061019e9190611d92565b6103f0565b6040516101b09190612304565b60405180910390f35b6101d360048036038101906101ce9190611cd9565b610521565b005b6101dd610714565b6040516101ea9190612285565b60405180910390f35b61020d60048036038101906102089190611dd3565b61073d565b60405161021e959493929190612326565b60405180910390f35b610241600480360381019061023c9190611bf1565b6109e0565b005b61025d60048036038101906102589190611d92565b610ea4565b60405161026e959493929190612326565b60405180910390f35b610291600480360381019061028c9190611d92565b611226565b60405161029e9190612304565b60405180910390f35b6102c160048036038101906102bc9190611d92565b611357565b6040516102ce919061250f565b60405180910390f35b6102df6113f0565b6040516102ec91906122a0565b60405180910390f35b61030f600480360381019061030a9190611bac565b611447565b005b6002818051602081018201805184825260208301602085012081835280955050505050506000915090508060000154908060010160009054906101000a900460ff16905082565b6000600180549050905090565b61036d6113f0565b6103ac576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016103a3906124cf565b60405180910390fd5b6103b581611652565b50565b60006002826040516103ca919061226e565b908152602001604051809103902060010160009054906101000a900460ff169050919050565b60606103fa611903565b60028360405161040a919061226e565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905080602001511561051757600181600001518154811061046557fe5b90600052602060002090600502016002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050a5780601f106104df5761010080835404028352916020019161050a565b820191906000526020600020905b8154815290600101906020018083116104ed57829003601f168201915b505050505091505061051c565b819150505b919050565b6105296113f0565b610568576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161055f906124cf565b60405180910390fd5b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506002816040516105bd919061226e565b908152602001604051809103902060010160009054906101000a900460ff1661061b576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016106129061248f565b60405180910390fd5b6000600160028a8a604051610631929190612255565b9081526020016040518091039020600001548154811061064d57fe5b90600052602060002090600502019050600087879050111561067e57868682600201919061067c92919061191f565b505b600085859050111561069f57848482600301919061069d92919061191f565b505b60008311156106b2578281600401819055505b88886040516106c2929190612255565b60405180910390207f7a7669f9ae0472fda70561457e748c4df8b930fa1cf1457f5469e1ba3b8b3d4288888888886040516107019594939291906122bb565b60405180910390a2505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061074a57fe5b9060005260206000209060050201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f65780601f106107cb576101008083540402835291602001916107f6565b820191906000526020600020905b8154815290600101906020018083116107d957829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108945780601f1061086957610100808354040283529160200191610894565b820191906000526020600020905b81548152906001019060200180831161087757829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d05780601f106109a5576101008083540402835291602001916109d0565b820191906000526020600020905b8154815290600101906020018083116109b357829003601f168201915b5050505050908060040154905085565b6109e86113f0565b610a27576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610a1e906124cf565b60405180910390fd5b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846000855111610b80576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610b779061246f565b60405180910390fd5b6000845111610bc4576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610bbb9061240f565b60405180910390fd5b6000835111610c08576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610bff906123ef565b60405180910390fd5b6000825111610c4c576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610c439061244f565b60405180910390fd5b60008111610c8f576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610c86906124af565b60405180910390fd5b8d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600281604051610ce4919061226e565b908152602001604051809103902060010160009054906101000a900460ff1615610d43576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610d3a906124ef565b60405180910390fd5b610d4b61199f565b8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081600001819052508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081602001819052508b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816060018190525087816080018181525050610e9281611780565b50505050505050505050505050505050565b6060806060806000610eb4611903565b600287604051610ec4919061226e565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905060008160200151156111c7576001826000015181548110610f2157fe5b90600052602060002090600502019050806000018160010182600201836003018460040154848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fdb5780601f10610fb057610100808354040283529160200191610fdb565b820191906000526020600020905b815481529060010190602001808311610fbe57829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110775780601f1061104c57610100808354040283529160200191611077565b820191906000526020600020905b81548152906001019060200180831161105a57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111135780601f106110e857610100808354040283529160200191611113565b820191906000526020600020905b8154815290600101906020018083116110f657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111af5780601f10611184576101008083540402835291602001916111af565b820191906000526020600020905b81548152906001019060200180831161119257829003601f168201915b5050505050915096509650965096509650505061121d565b600060405180602001604052806000815250906040518060200160405280600081525090604051806020016040528060008152509060405180602001604052806000815250908090509650965096509650965050505b91939590929450565b6060611230611903565b600283604051611240919061226e565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905080602001511561134d57600181600001518154811061129b57fe5b90600052602060002090600502016003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113405780601f1061131557610100808354040283529160200191611340565b820191906000526020600020905b81548152906001019060200180831161132357829003601f168201915b5050505050915050611352565b819150505b919050565b6000611361611903565b600283604051611371919061226e565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff16151515158152505090508060200151156113e65760018160000151815481106113cc57fe5b9060005260206000209060050201600401549150506113eb565b819150505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61144f6113f0565b61148e576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611485906124cf565b60405180910390fd5b81818080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506002816040516114e3919061226e565b908152602001604051809103902060010160009054906101000a900460ff16611541576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016115389061248f565b60405180910390fd5b600160028484604051611555929190612255565b9081526020016040518091039020600001548154811061157157fe5b90600052602060002090600502016000808201600061159091906119ce565b6001820160006115a091906119ce565b6002820160006115b091906119ce565b6003820160006115c091906119ce565b60048201600090555050600283836040516115dc929190612255565b90815260200160405180910390206000808201600090556001820160006101000a81549060ff021916905550508282604051611619929190612255565b60405180910390207f667378d5061e84f0e8940230e3022c567aa1d8c2e425ee81aace26e7d8d6eaa460405160405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116c2576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016116b99061242f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c7c30d4a0f08950cb23be4132957b357fa5dfdb0fcf218f81b86a1c036e47d060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001805490506002826000015160405161179a919061226e565b9081526020016040518091039020600001819055506001600282600001516040516117c5919061226e565b908152602001604051809103902060010160006101000a81548160ff02191690831515021790555060018190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190611835929190611a16565b506020820151816001019080519060200190611852929190611a16565b50604082015181600201908051906020019061186f929190611a16565b50606082015181600301908051906020019061188c929190611a16565b5060808201518160040155505080600001516040516118ab919061226e565b60405180910390207f3a092fad231e05e29f7061a78203ceb4110c59c67d0a2f0d1b4ccb2fe25ecc9082602001518360400151846060015185608001516040516118f89493929190612395565b60405180910390a250565b6040518060400160405280600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061196057803560ff191683800117855561198e565b8280016001018555821561198e579182015b8281111561198d578235825591602001919060010190611972565b5b50905061199b9190611a96565b5090565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600081525090565b50805460018160011615610100020316600290046000825580601f106119f45750611a13565b601f016020900490600052602060002090810190611a129190611a96565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a5757805160ff1916838001178555611a85565b82800160010185558215611a85579182015b82811115611a84578251825591602001919060010190611a69565b5b509050611a929190611a96565b5090565b611ab891905b80821115611ab4576000816000905550600101611a9c565b5090565b90565b600081359050611aca8161266e565b92915050565b60008083601f840112611ae257600080fd5b8235905067ffffffffffffffff811115611afb57600080fd5b602083019150836001820283011115611b1357600080fd5b9250929050565b600082601f830112611b2b57600080fd5b8135611b3e611b3982612580565b612553565b91508082526020830160208301858383011115611b5a57600080fd5b611b6583828461261b565b50505092915050565b600081359050611b7d81612685565b92915050565b600060208284031215611b9557600080fd5b6000611ba384828501611abb565b91505092915050565b60008060208385031215611bbf57600080fd5b600083013567ffffffffffffffff811115611bd957600080fd5b611be585828601611ad0565b92509250509250929050565b600080600080600080600080600060a08a8c031215611c0f57600080fd5b60008a013567ffffffffffffffff811115611c2957600080fd5b611c358c828d01611ad0565b995099505060208a013567ffffffffffffffff811115611c5457600080fd5b611c608c828d01611ad0565b975097505060408a013567ffffffffffffffff811115611c7f57600080fd5b611c8b8c828d01611ad0565b955095505060608a013567ffffffffffffffff811115611caa57600080fd5b611cb68c828d01611ad0565b93509350506080611cc98c828d01611b6e565b9150509295985092959850929598565b60008060008060008060006080888a031215611cf457600080fd5b600088013567ffffffffffffffff811115611d0e57600080fd5b611d1a8a828b01611ad0565b9750975050602088013567ffffffffffffffff811115611d3957600080fd5b611d458a828b01611ad0565b9550955050604088013567ffffffffffffffff811115611d6457600080fd5b611d708a828b01611ad0565b93509350506060611d838a828b01611b6e565b91505092959891949750929550565b600060208284031215611da457600080fd5b600082013567ffffffffffffffff811115611dbe57600080fd5b611dca84828501611b1a565b91505092915050565b600060208284031215611de557600080fd5b6000611df384828501611b6e565b91505092915050565b611e05816125d3565b82525050565b611e14816125e5565b82525050565b6000611e2683856125b7565b9350611e3383858461261b565b611e3c8361265d565b840190509392505050565b6000611e5383856125c8565b9350611e6083858461261b565b82840190509392505050565b6000611e77826125ac565b611e8181856125b7565b9350611e9181856020860161262a565b611e9a8161265d565b840191505092915050565b6000611eb0826125ac565b611eba81856125c8565b9350611eca81856020860161262a565b80840191505092915050565b6000611ee36033836125b7565b91507f69536572766963654d61726b657445783a20736572766963652070726f76696460008301527f65722063616e206e6f7420626520656d707479000000000000000000000000006020830152604082019050919050565b6000611f496032836125b7565b91507f69536572766963654d61726b657445783a207365727669636520736368656d6160008301527f732063616e206e6f7420626520656d70747900000000000000000000000000006020830152604082019050919050565b6000611faf6026836125b7565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612015602e836125b7565b91507f69536572766963654d61726b657445783a20736572766963652066656520636160008301527f6e206e6f7420626520656d7074790000000000000000000000000000000000006020830152604082019050919050565b600061207b602f836125b7565b91507f69536572766963654d61726b657445783a2073657276696365206e616d65206360008301527f616e206e6f7420626520656d70747900000000000000000000000000000000006020830152604082019050919050565b60006120e16030836125b7565b91507f69536572766963654d61726b657445783a20736572766963652062696e64696e60008301527f6720646f6573206e6f74206578697374000000000000000000000000000000006020830152604082019050919050565b6000612147602e836125b7565b91507f69536572766963654d61726b657445783a20716f732073686f756c642062652060008301527f67726561746572207468616e20300000000000000000000000000000000000006020830152604082019050919050565b60006121ad6020836125b7565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006121ed6030836125b7565b91507f69536572766963654d61726b657445783a20736572766963652062696e64696e60008301527f6720616c726561647920657869737473000000000000000000000000000000006020830152604082019050919050565b61224f81612611565b82525050565b6000612262828486611e47565b91508190509392505050565b600061227a8284611ea5565b915081905092915050565b600060208201905061229a6000830184611dfc565b92915050565b60006020820190506122b56000830184611e0b565b92915050565b600060608201905081810360008301526122d6818789611e1a565b905081810360208301526122eb818587611e1a565b90506122fa6040830184612246565b9695505050505050565b6000602082019050818103600083015261231e8184611e6c565b905092915050565b600060a08201905081810360008301526123408188611e6c565b905081810360208301526123548187611e6c565b905081810360408301526123688186611e6c565b9050818103606083015261237c8185611e6c565b905061238b6080830184612246565b9695505050505050565b600060808201905081810360008301526123af8187611e6c565b905081810360208301526123c38186611e6c565b905081810360408301526123d78185611e6c565b90506123e66060830184612246565b95945050505050565b6000602082019050818103600083015261240881611ed6565b9050919050565b6000602082019050818103600083015261242881611f3c565b9050919050565b6000602082019050818103600083015261244881611fa2565b9050919050565b6000602082019050818103600083015261246881612008565b9050919050565b600060208201905081810360008301526124888161206e565b9050919050565b600060208201905081810360008301526124a8816120d4565b9050919050565b600060208201905081810360008301526124c88161213a565b9050919050565b600060208201905081810360008301526124e8816121a0565b9050919050565b60006020820190508181036000830152612508816121e0565b9050919050565b60006020820190506125246000830184612246565b92915050565b600060408201905061253f6000830185612246565b61254c6020830184611e0b565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561257657600080fd5b8060405250919050565b600067ffffffffffffffff82111561259757600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006125de826125f1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561264857808201518184015260208101905061262d565b83811115612657576000848401525b50505050565b6000601f19601f8301169050919050565b612677816125d3565b811461268257600080fd5b50565b61268e81612611565b811461269957600080fd5b5056fea2646970667358221220f6d7fb7768442dd7a52c943036413a9a0865816c868cfd052d41d9d535e975d064736f6c634300060a0033"

// DeployIServiceMarketEx deploys a new contract, binding an instance of IServiceMarketEx to it.
func DeployIServiceMarketEx(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *IServiceMarketEx, error) {
	parsed, err := abi.JSON(strings.NewReader(IServiceMarketExABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(IServiceMarketExBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &IServiceMarketEx{IServiceMarketExCaller: IServiceMarketExCaller{contract: contract}, IServiceMarketExTransactor: IServiceMarketExTransactor{contract: contract}, IServiceMarketExFilterer: IServiceMarketExFilterer{contract: contract}}, nil
}

func AsyncDeployIServiceMarketEx(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(IServiceMarketExABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(IServiceMarketExBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// IServiceMarketEx is an auto generated Go binding around a Solidity contract.
type IServiceMarketEx struct {
	IServiceMarketExCaller     // Read-only binding to the contract
	IServiceMarketExTransactor // Write-only binding to the contract
	IServiceMarketExFilterer   // Log filterer for contract events
}

// IServiceMarketExCaller is an auto generated read-only Go binding around a Solidity contract.
type IServiceMarketExCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IServiceMarketExTransactor is an auto generated write-only Go binding around a Solidity contract.
type IServiceMarketExTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IServiceMarketExFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type IServiceMarketExFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IServiceMarketExSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type IServiceMarketExSession struct {
	Contract     *IServiceMarketEx // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IServiceMarketExCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type IServiceMarketExCallerSession struct {
	Contract *IServiceMarketExCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// IServiceMarketExTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type IServiceMarketExTransactorSession struct {
	Contract     *IServiceMarketExTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// IServiceMarketExRaw is an auto generated low-level Go binding around a Solidity contract.
type IServiceMarketExRaw struct {
	Contract *IServiceMarketEx // Generic contract binding to access the raw methods on
}

// IServiceMarketExCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type IServiceMarketExCallerRaw struct {
	Contract *IServiceMarketExCaller // Generic read-only contract binding to access the raw methods on
}

// IServiceMarketExTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type IServiceMarketExTransactorRaw struct {
	Contract *IServiceMarketExTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIServiceMarketEx creates a new instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketEx(address common.Address, backend bind.ContractBackend) (*IServiceMarketEx, error) {
	contract, err := bindIServiceMarketEx(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketEx{IServiceMarketExCaller: IServiceMarketExCaller{contract: contract}, IServiceMarketExTransactor: IServiceMarketExTransactor{contract: contract}, IServiceMarketExFilterer: IServiceMarketExFilterer{contract: contract}}, nil
}

// NewIServiceMarketExCaller creates a new read-only instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketExCaller(address common.Address, caller bind.ContractCaller) (*IServiceMarketExCaller, error) {
	contract, err := bindIServiceMarketEx(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExCaller{contract: contract}, nil
}

// NewIServiceMarketExTransactor creates a new write-only instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketExTransactor(address common.Address, transactor bind.ContractTransactor) (*IServiceMarketExTransactor, error) {
	contract, err := bindIServiceMarketEx(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExTransactor{contract: contract}, nil
}

// NewIServiceMarketExFilterer creates a new log filterer instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketExFilterer(address common.Address, filterer bind.ContractFilterer) (*IServiceMarketExFilterer, error) {
	contract, err := bindIServiceMarketEx(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExFilterer{contract: contract}, nil
}

// bindIServiceMarketEx binds a generic wrapper to an already deployed contract.
func bindIServiceMarketEx(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IServiceMarketExABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IServiceMarketEx *IServiceMarketExRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IServiceMarketEx.Contract.IServiceMarketExCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IServiceMarketEx *IServiceMarketExRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.IServiceMarketExTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IServiceMarketEx *IServiceMarketExRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.IServiceMarketExTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IServiceMarketEx *IServiceMarketExCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IServiceMarketEx.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IServiceMarketEx *IServiceMarketExTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IServiceMarketEx *IServiceMarketExTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.contract.Transact(opts, method, params...)
}

// BindingIndices is a free data retrieval call binding the contract method 0x008a6d0b.
//
// Solidity: function bindingIndices(string ) constant returns(uint256 index, bool exist)
func (_IServiceMarketEx *IServiceMarketExCaller) BindingIndices(opts *bind.CallOpts, arg0 string) (struct {
	Index *big.Int
	Exist bool
}, error) {
	ret := new(struct {
		Index *big.Int
		Exist bool
	})
	out := ret
	err := _IServiceMarketEx.contract.Call(opts, out, "bindingIndices", arg0)
	return *ret, err
}

// BindingIndices is a free data retrieval call binding the contract method 0x008a6d0b.
//
// Solidity: function bindingIndices(string ) constant returns(uint256 index, bool exist)
func (_IServiceMarketEx *IServiceMarketExSession) BindingIndices(arg0 string) (struct {
	Index *big.Int
	Exist bool
}, error) {
	return _IServiceMarketEx.Contract.BindingIndices(&_IServiceMarketEx.CallOpts, arg0)
}

// BindingIndices is a free data retrieval call binding the contract method 0x008a6d0b.
//
// Solidity: function bindingIndices(string ) constant returns(uint256 index, bool exist)
func (_IServiceMarketEx *IServiceMarketExCallerSession) BindingIndices(arg0 string) (struct {
	Index *big.Int
	Exist bool
}, error) {
	return _IServiceMarketEx.Contract.BindingIndices(&_IServiceMarketEx.CallOpts, arg0)
}

// Bindings is a free data retrieval call binding the contract method 0x5c3b35cb.
//
// Solidity: function bindings(uint256 ) constant returns(string serviceName, string schemas, string provider, string serviceFee, uint256 qos)
func (_IServiceMarketEx *IServiceMarketExCaller) Bindings(opts *bind.CallOpts, arg0 *big.Int) (struct {
	ServiceName string
	Schemas     string
	Provider    string
	ServiceFee  string
	Qos         *big.Int
}, error) {
	ret := new(struct {
		ServiceName string
		Schemas     string
		Provider    string
		ServiceFee  string
		Qos         *big.Int
	})
	out := ret
	err := _IServiceMarketEx.contract.Call(opts, out, "bindings", arg0)
	return *ret, err
}

// Bindings is a free data retrieval call binding the contract method 0x5c3b35cb.
//
// Solidity: function bindings(uint256 ) constant returns(string serviceName, string schemas, string provider, string serviceFee, uint256 qos)
func (_IServiceMarketEx *IServiceMarketExSession) Bindings(arg0 *big.Int) (struct {
	ServiceName string
	Schemas     string
	Provider    string
	ServiceFee  string
	Qos         *big.Int
}, error) {
	return _IServiceMarketEx.Contract.Bindings(&_IServiceMarketEx.CallOpts, arg0)
}

// Bindings is a free data retrieval call binding the contract method 0x5c3b35cb.
//
// Solidity: function bindings(uint256 ) constant returns(string serviceName, string schemas, string provider, string serviceFee, uint256 qos)
func (_IServiceMarketEx *IServiceMarketExCallerSession) Bindings(arg0 *big.Int) (struct {
	ServiceName string
	Schemas     string
	Provider    string
	ServiceFee  string
	Qos         *big.Int
}, error) {
	return _IServiceMarketEx.Contract.Bindings(&_IServiceMarketEx.CallOpts, arg0)
}

// GetQoS is a free data retrieval call binding the contract method 0xeac81af8.
//
// Solidity: function getQoS(string _serviceName) constant returns(uint256 qos)
func (_IServiceMarketEx *IServiceMarketExCaller) GetQoS(opts *bind.CallOpts, _serviceName string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "getQoS", _serviceName)
	return *ret0, err
}

// GetQoS is a free data retrieval call binding the contract method 0xeac81af8.
//
// Solidity: function getQoS(string _serviceName) constant returns(uint256 qos)
func (_IServiceMarketEx *IServiceMarketExSession) GetQoS(_serviceName string) (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetQoS(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetQoS is a free data retrieval call binding the contract method 0xeac81af8.
//
// Solidity: function getQoS(string _serviceName) constant returns(uint256 qos)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetQoS(_serviceName string) (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetQoS(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceBinding is a free data retrieval call binding the contract method 0x81b92697.
//
// Solidity: function getServiceBinding(string _serviceName) constant returns(string, string, string, string, uint256)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceBinding(opts *bind.CallOpts, _serviceName string) (string, string, string, string, *big.Int, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
		ret4 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _IServiceMarketEx.contract.Call(opts, out, "getServiceBinding", _serviceName)
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetServiceBinding is a free data retrieval call binding the contract method 0x81b92697.
//
// Solidity: function getServiceBinding(string _serviceName) constant returns(string, string, string, string, uint256)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceBinding(_serviceName string) (string, string, string, string, *big.Int, error) {
	return _IServiceMarketEx.Contract.GetServiceBinding(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceBinding is a free data retrieval call binding the contract method 0x81b92697.
//
// Solidity: function getServiceBinding(string _serviceName) constant returns(string, string, string, string, uint256)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceBinding(_serviceName string) (string, string, string, string, *big.Int, error) {
	return _IServiceMarketEx.Contract.GetServiceBinding(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceBindingCount is a free data retrieval call binding the contract method 0x0a9bdf07.
//
// Solidity: function getServiceBindingCount() constant returns(uint256 count)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceBindingCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "getServiceBindingCount")
	return *ret0, err
}

// GetServiceBindingCount is a free data retrieval call binding the contract method 0x0a9bdf07.
//
// Solidity: function getServiceBindingCount() constant returns(uint256 count)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceBindingCount() (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetServiceBindingCount(&_IServiceMarketEx.CallOpts)
}

// GetServiceBindingCount is a free data retrieval call binding the contract method 0x0a9bdf07.
//
// Solidity: function getServiceBindingCount() constant returns(uint256 count)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceBindingCount() (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetServiceBindingCount(&_IServiceMarketEx.CallOpts)
}

// GetServiceFee is a free data retrieval call binding the contract method 0x9b0a965c.
//
// Solidity: function getServiceFee(string _serviceName) constant returns(string fee)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceFee(opts *bind.CallOpts, _serviceName string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "getServiceFee", _serviceName)
	return *ret0, err
}

// GetServiceFee is a free data retrieval call binding the contract method 0x9b0a965c.
//
// Solidity: function getServiceFee(string _serviceName) constant returns(string fee)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceFee(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceFee(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceFee is a free data retrieval call binding the contract method 0x9b0a965c.
//
// Solidity: function getServiceFee(string _serviceName) constant returns(string fee)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceFee(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceFee(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceProvider is a free data retrieval call binding the contract method 0x438166c6.
//
// Solidity: function getServiceProvider(string _serviceName) constant returns(string provider)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceProvider(opts *bind.CallOpts, _serviceName string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "getServiceProvider", _serviceName)
	return *ret0, err
}

// GetServiceProvider is a free data retrieval call binding the contract method 0x438166c6.
//
// Solidity: function getServiceProvider(string _serviceName) constant returns(string provider)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceProvider(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceProvider(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceProvider is a free data retrieval call binding the contract method 0x438166c6.
//
// Solidity: function getServiceProvider(string _serviceName) constant returns(string provider)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceProvider(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceProvider(&_IServiceMarketEx.CallOpts, _serviceName)
}

// IsOwner is a free data retrieval call binding the contract method 0xede8e529.
//
// Solidity: function isOwner() constant returns(bool)
func (_IServiceMarketEx *IServiceMarketExCaller) IsOwner(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "isOwner")
	return *ret0, err
}

// IsOwner is a free data retrieval call binding the contract method 0xede8e529.
//
// Solidity: function isOwner() constant returns(bool)
func (_IServiceMarketEx *IServiceMarketExSession) IsOwner() (bool, error) {
	return _IServiceMarketEx.Contract.IsOwner(&_IServiceMarketEx.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0xede8e529.
//
// Solidity: function isOwner() constant returns(bool)
func (_IServiceMarketEx *IServiceMarketExCallerSession) IsOwner() (bool, error) {
	return _IServiceMarketEx.Contract.IsOwner(&_IServiceMarketEx.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x5089e2c8.
//
// Solidity: function owner() constant returns(address)
func (_IServiceMarketEx *IServiceMarketExCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x5089e2c8.
//
// Solidity: function owner() constant returns(address)
func (_IServiceMarketEx *IServiceMarketExSession) Owner() (common.Address, error) {
	return _IServiceMarketEx.Contract.Owner(&_IServiceMarketEx.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x5089e2c8.
//
// Solidity: function owner() constant returns(address)
func (_IServiceMarketEx *IServiceMarketExCallerSession) Owner() (common.Address, error) {
	return _IServiceMarketEx.Contract.Owner(&_IServiceMarketEx.CallOpts)
}

// ServiceBindingExists is a free data retrieval call binding the contract method 0x27e41750.
//
// Solidity: function serviceBindingExists(string _serviceName) constant returns(bool exist)
func (_IServiceMarketEx *IServiceMarketExCaller) ServiceBindingExists(opts *bind.CallOpts, _serviceName string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "serviceBindingExists", _serviceName)
	return *ret0, err
}

// ServiceBindingExists is a free data retrieval call binding the contract method 0x27e41750.
//
// Solidity: function serviceBindingExists(string _serviceName) constant returns(bool exist)
func (_IServiceMarketEx *IServiceMarketExSession) ServiceBindingExists(_serviceName string) (bool, error) {
	return _IServiceMarketEx.Contract.ServiceBindingExists(&_IServiceMarketEx.CallOpts, _serviceName)
}

// ServiceBindingExists is a free data retrieval call binding the contract method 0x27e41750.
//
// Solidity: function serviceBindingExists(string _serviceName) constant returns(bool exist)
func (_IServiceMarketEx *IServiceMarketExCallerSession) ServiceBindingExists(_serviceName string) (bool, error) {
	return _IServiceMarketEx.Contract.ServiceBindingExists(&_IServiceMarketEx.CallOpts, _serviceName)
}

// AddServiceBinding is a paid mutator transaction binding the contract method 0x7b6397fa.
//
// Solidity: function addServiceBinding(string _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) AddServiceBinding(opts *bind.TransactOpts, _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "addServiceBinding", _serviceName, _schemas, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncAddServiceBinding(handler func(*types.Receipt, error), opts *bind.TransactOpts, _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "addServiceBinding", _serviceName, _schemas, _provider, _serviceFee, _qos)
}

// AddServiceBinding is a paid mutator transaction binding the contract method 0x7b6397fa.
//
// Solidity: function addServiceBinding(string _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExSession) AddServiceBinding(_serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.AddServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncAddServiceBinding(handler func(*types.Receipt, error), _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncAddServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

// AddServiceBinding is a paid mutator transaction binding the contract method 0x7b6397fa.
//
// Solidity: function addServiceBinding(string _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) AddServiceBinding(_serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.AddServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncAddServiceBinding(handler func(*types.Receipt, error), _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncAddServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

// RemoveServiceBinding is a paid mutator transaction binding the contract method 0xf10b3735.
//
// Solidity: function removeServiceBinding(string _serviceName) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) RemoveServiceBinding(opts *bind.TransactOpts, _serviceName string) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "removeServiceBinding", _serviceName)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncRemoveServiceBinding(handler func(*types.Receipt, error), opts *bind.TransactOpts, _serviceName string) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "removeServiceBinding", _serviceName)
}

// RemoveServiceBinding is a paid mutator transaction binding the contract method 0xf10b3735.
//
// Solidity: function removeServiceBinding(string _serviceName) returns()
func (_IServiceMarketEx *IServiceMarketExSession) RemoveServiceBinding(_serviceName string) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.RemoveServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncRemoveServiceBinding(handler func(*types.Receipt, error), _serviceName string) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncRemoveServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName)
}

// RemoveServiceBinding is a paid mutator transaction binding the contract method 0xf10b3735.
//
// Solidity: function removeServiceBinding(string _serviceName) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) RemoveServiceBinding(_serviceName string) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.RemoveServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncRemoveServiceBinding(handler func(*types.Receipt, error), _serviceName string) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncRemoveServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x16cad12a.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "transferOwnership", newOwner)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncTransferOwnership(handler func(*types.Receipt, error), opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x16cad12a.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_IServiceMarketEx *IServiceMarketExSession) TransferOwnership(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.TransferOwnership(&_IServiceMarketEx.TransactOpts, newOwner)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncTransferOwnership(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncTransferOwnership(handler, &_IServiceMarketEx.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x16cad12a.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.TransferOwnership(&_IServiceMarketEx.TransactOpts, newOwner)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncTransferOwnership(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncTransferOwnership(handler, &_IServiceMarketEx.TransactOpts, newOwner)
}

// UpdateServiceBinding is a paid mutator transaction binding the contract method 0x47b71720.
//
// Solidity: function updateServiceBinding(string _serviceName, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) UpdateServiceBinding(opts *bind.TransactOpts, _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "updateServiceBinding", _serviceName, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncUpdateServiceBinding(handler func(*types.Receipt, error), opts *bind.TransactOpts, _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "updateServiceBinding", _serviceName, _provider, _serviceFee, _qos)
}

// UpdateServiceBinding is a paid mutator transaction binding the contract method 0x47b71720.
//
// Solidity: function updateServiceBinding(string _serviceName, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExSession) UpdateServiceBinding(_serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.UpdateServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncUpdateServiceBinding(handler func(*types.Receipt, error), _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncUpdateServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

// UpdateServiceBinding is a paid mutator transaction binding the contract method 0x47b71720.
//
// Solidity: function updateServiceBinding(string _serviceName, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) UpdateServiceBinding(_serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.UpdateServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncUpdateServiceBinding(handler func(*types.Receipt, error), _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncUpdateServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

// IServiceMarketExOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the IServiceMarketEx contract.
type IServiceMarketExOwnershipTransferredIterator struct {
	Event *IServiceMarketExOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExOwnershipTransferred represents a OwnershipTransferred event raised by the IServiceMarketEx contract.
type IServiceMarketExOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x000000000000000000000000000000000000000000000000000000005c7c30d4.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*IServiceMarketExOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExOwnershipTransferredIterator{contract: _IServiceMarketEx.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x000000000000000000000000000000000000000000000000000000005c7c30d4.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *IServiceMarketExOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExOwnershipTransferred)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x000000000000000000000000000000000000000000000000000000005c7c30d4.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseOwnershipTransferred(log types.Log) (*IServiceMarketExOwnershipTransferred, error) {
	event := new(IServiceMarketExOwnershipTransferred)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	return event, nil
}

// IServiceMarketExServiceBindingAddedIterator is returned from FilterServiceBindingAdded and is used to iterate over the raw logs and unpacked data for ServiceBindingAdded events raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingAddedIterator struct {
	Event *IServiceMarketExServiceBindingAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExServiceBindingAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExServiceBindingAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExServiceBindingAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExServiceBindingAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExServiceBindingAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExServiceBindingAdded represents a ServiceBindingAdded event raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingAdded struct {
	ServiceName common.Hash
	Schemas     string
	Provider    string
	ServiceFee  string
	Qos         *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterServiceBindingAdded is a free log retrieval operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000021bc4ee.
//
// Solidity: event ServiceBindingAdded(string indexed _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterServiceBindingAdded(opts *bind.FilterOpts, _serviceName []string) (*IServiceMarketExServiceBindingAddedIterator, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "ServiceBindingAdded", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExServiceBindingAddedIterator{contract: _IServiceMarketEx.contract, event: "ServiceBindingAdded", logs: logs, sub: sub}, nil
}

// WatchServiceBindingAdded is a free log subscription operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000021bc4ee.
//
// Solidity: event ServiceBindingAdded(string indexed _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchServiceBindingAdded(opts *bind.WatchOpts, sink chan<- *IServiceMarketExServiceBindingAdded, _serviceName []string) (event.Subscription, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "ServiceBindingAdded", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExServiceBindingAdded)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceBindingAdded is a log parse operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000021bc4ee.
//
// Solidity: event ServiceBindingAdded(string indexed _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseServiceBindingAdded(log types.Log) (*IServiceMarketExServiceBindingAdded, error) {
	event := new(IServiceMarketExServiceBindingAdded)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// IServiceMarketExServiceBindingRemovedIterator is returned from FilterServiceBindingRemoved and is used to iterate over the raw logs and unpacked data for ServiceBindingRemoved events raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingRemovedIterator struct {
	Event *IServiceMarketExServiceBindingRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExServiceBindingRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExServiceBindingRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExServiceBindingRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExServiceBindingRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExServiceBindingRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExServiceBindingRemoved represents a ServiceBindingRemoved event raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingRemoved struct {
	ServiceName common.Hash
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterServiceBindingRemoved is a free log retrieval operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000667378d5.
//
// Solidity: event ServiceBindingRemoved(string indexed _serviceName)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterServiceBindingRemoved(opts *bind.FilterOpts, _serviceName []string) (*IServiceMarketExServiceBindingRemovedIterator, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "ServiceBindingRemoved", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExServiceBindingRemovedIterator{contract: _IServiceMarketEx.contract, event: "ServiceBindingRemoved", logs: logs, sub: sub}, nil
}

// WatchServiceBindingRemoved is a free log subscription operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000667378d5.
//
// Solidity: event ServiceBindingRemoved(string indexed _serviceName)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchServiceBindingRemoved(opts *bind.WatchOpts, sink chan<- *IServiceMarketExServiceBindingRemoved, _serviceName []string) (event.Subscription, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "ServiceBindingRemoved", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExServiceBindingRemoved)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceBindingRemoved is a log parse operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000667378d5.
//
// Solidity: event ServiceBindingRemoved(string indexed _serviceName)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseServiceBindingRemoved(log types.Log) (*IServiceMarketExServiceBindingRemoved, error) {
	event := new(IServiceMarketExServiceBindingRemoved)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// IServiceMarketExServiceBindingUpdatedIterator is returned from FilterServiceBindingUpdated and is used to iterate over the raw logs and unpacked data for ServiceBindingUpdated events raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingUpdatedIterator struct {
	Event *IServiceMarketExServiceBindingUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExServiceBindingUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExServiceBindingUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExServiceBindingUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExServiceBindingUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExServiceBindingUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExServiceBindingUpdated represents a ServiceBindingUpdated event raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingUpdated struct {
	ServiceName common.Hash
	Provider    string
	ServiceFee  string
	Qos         *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterServiceBindingUpdated is a free log retrieval operation binding the contract event 0x000000000000000000000000000000000000000000000000000000007a7669f9.
//
// Solidity: event ServiceBindingUpdated(string indexed _serviceName, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterServiceBindingUpdated(opts *bind.FilterOpts, _serviceName []string) (*IServiceMarketExServiceBindingUpdatedIterator, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "ServiceBindingUpdated", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExServiceBindingUpdatedIterator{contract: _IServiceMarketEx.contract, event: "ServiceBindingUpdated", logs: logs, sub: sub}, nil
}

// WatchServiceBindingUpdated is a free log subscription operation binding the contract event 0x000000000000000000000000000000000000000000000000000000007a7669f9.
//
// Solidity: event ServiceBindingUpdated(string indexed _serviceName, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchServiceBindingUpdated(opts *bind.WatchOpts, sink chan<- *IServiceMarketExServiceBindingUpdated, _serviceName []string) (event.Subscription, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "ServiceBindingUpdated", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExServiceBindingUpdated)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceBindingUpdated is a log parse operation binding the contract event 0x000000000000000000000000000000000000000000000000000000007a7669f9.
//
// Solidity: event ServiceBindingUpdated(string indexed _serviceName, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseServiceBindingUpdated(log types.Log) (*IServiceMarketExServiceBindingUpdated, error) {
	event := new(IServiceMarketExServiceBindingUpdated)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingUpdated", log); err != nil {
		return nil, err
	}
	return event, nil
}
