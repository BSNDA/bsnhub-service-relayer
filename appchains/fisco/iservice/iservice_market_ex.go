// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package iservice

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	"github.com/FISCO-BCOS/go-sdk/event"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// iServiceMarketExServiceBinding is an auto generated low-level Go binding around an user-defined struct.
type iServiceMarketExServiceBinding struct {
	ServiceName string
	Schemas     string
	Provider    string
	ServiceFee  string
	Qos         *big.Int
}

// IServiceMarketExABI is the input ABI used to generate the binding from.
const IServiceMarketExABI = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_schemas\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"ServiceBindingAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"ServiceBindingRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"ServiceBindingUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"GetQoS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qos\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"GetServiceBinding\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"schemas\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qos\",\"type\":\"uint256\"}],\"internalType\":\"structiServiceMarketEx.ServiceBinding\",\"name\":\"binding\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"GetServiceBindingByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"schemas\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"qos\",\"type\":\"uint256\"}],\"internalType\":\"structiServiceMarketEx.ServiceBinding\",\"name\":\"binding\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetServiceBindingCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"GetServiceFee\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"fee\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"GetServiceProvider\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"provider\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_schemas\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"addServiceBinding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"removeServiceBinding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"}],\"name\":\"serviceBindingExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_provider\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_serviceFee\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_qos\",\"type\":\"uint256\"}],\"name\":\"updateServiceBinding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IServiceMarketExBin is the compiled bytecode used for deploying new contracts.
var IServiceMarketExBin = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c7c30d4a0f08950cb23be4132957b357fa5dfdb0fcf218f81b86a1c036e47d060405160405180910390a3612696806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635089e2c81161008c578063c6a9fbec11610066578063c6a9fbec14610224578063cbb950e414610254578063ede8e52914610284578063f10b3735146102a2576100cf565b80635089e2c8146101cc5780637b6397fa146101ea5780638fd4d35014610206576100cf565b806306593547146100d457806316cad12a1461010457806327e4175014610120578063347f33d71461015057806339fb59e01461018057806347b71720146101b0575b600080fd5b6100ee60048036038101906100e99190611ce8565b6102be565b6040516100fb91906124eb565b60405180910390f35b61011e60048036038101906101199190611ad9565b610357565b005b61013a60048036038101906101359190611ce8565b6103aa565b60405161014791906122c9565b60405180910390f35b61016a60048036038101906101659190611ce8565b6103e2565b604051610177919061232d565b60405180910390f35b61019a60048036038101906101959190611ce8565b610513565b6040516101a7919061232d565b60405180910390f35b6101ca60048036038101906101c59190611c2f565b610644565b005b6101d4610837565b6040516101e191906122ae565b60405180910390f35b61020460048036038101906101ff9190611b47565b610860565b005b61020e610d24565b60405161021b91906124eb565b60405180910390f35b61023e60048036038101906102399190611ce8565b610d31565b60405161024b91906124c9565b60405180910390f35b61026e60048036038101906102699190611d29565b611069565b60405161027b91906124c9565b60405180910390f35b61028c611346565b60405161029991906122c9565b60405180910390f35b6102bc60048036038101906102b79190611b02565b61139d565b005b60006102c8611859565b6002836040516102d89190612297565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905080602001511561034d57600181600001518154811061033357fe5b906000526020600020906005020160040154915050610352565b819150505b919050565b61035f611346565b61039e576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161039590612489565b60405180910390fd5b6103a7816115a8565b50565b60006002826040516103bc9190612297565b908152602001604051809103902060010160009054906101000a900460ff169050919050565b60606103ec611859565b6002836040516103fc9190612297565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905080602001511561050957600181600001518154811061045757fe5b90600052602060002090600502016002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104fc5780601f106104d1576101008083540402835291602001916104fc565b820191906000526020600020905b8154815290600101906020018083116104df57829003601f168201915b505050505091505061050e565b819150505b919050565b606061051d611859565b60028360405161052d9190612297565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905080602001511561063a57600181600001518154811061058857fe5b90600052602060002090600502016003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b505050505091505061063f565b819150505b919050565b61064c611346565b61068b576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161068290612489565b60405180910390fd5b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506002816040516106e09190612297565b908152602001604051809103902060010160009054906101000a900460ff1661073e576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161073590612449565b60405180910390fd5b6000600160028a8a60405161075492919061227e565b9081526020016040518091039020600001548154811061077057fe5b9060005260206000209060050201905060008787905011156107a157868682600201919061079f929190611875565b505b60008585905011156107c25784848260030191906107c0929190611875565b505b60008311156107d5578281600401819055505b88886040516107e592919061227e565b60405180910390207f7a7669f9ae0472fda70561457e748c4df8b930fa1cf1457f5469e1ba3b8b3d4288888888886040516108249594939291906122e4565b60405180910390a2505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610868611346565b6108a7576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161089e90612489565b60405180910390fd5b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846000855111610a00576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016109f790612429565b60405180910390fd5b6000845111610a44576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610a3b906123c9565b60405180910390fd5b6000835111610a88576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610a7f906123a9565b60405180910390fd5b6000825111610acc576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610ac390612409565b60405180910390fd5b60008111610b0f576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610b0690612469565b60405180910390fd5b8d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600281604051610b649190612297565b908152602001604051809103902060010160009054906101000a900460ff1615610bc3576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401610bba906124a9565b60405180910390fd5b610bcb6118f5565b8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081600001819052508d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081602001819052508b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816060018190525087816080018181525050610d12816116d6565b50505050505050505050505050505050565b6000600180549050905090565b610d396118f5565b610d41611859565b600283604051610d519190612297565b9081526020016040518091039020604051806040016040529081600082015481526020016001820160009054906101000a900460ff161515151581525050905080602001511561105f576001816000015181548110610dac57fe5b90600052602060002090600502016040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e5e5780601f10610e3357610100808354040283529160200191610e5e565b820191906000526020600020905b815481529060010190602001808311610e4157829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f005780601f10610ed557610100808354040283529160200191610f00565b820191906000526020600020905b815481529060010190602001808311610ee357829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa25780601f10610f7757610100808354040283529160200191610fa2565b820191906000526020600020905b815481529060010190602001808311610f8557829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110445780601f1061101957610100808354040283529160200191611044565b820191906000526020600020905b81548152906001019060200180831161102757829003601f168201915b50505050508152602001600482015481525050915050611064565b819150505b919050565b6110716118f5565b60018054905082101561133d576001828154811061108b57fe5b90600052602060002090600502016040518060a0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561113d5780601f106111125761010080835404028352916020019161113d565b820191906000526020600020905b81548152906001019060200180831161112057829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111df5780601f106111b4576101008083540402835291602001916111df565b820191906000526020600020905b8154815290600101906020018083116111c257829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112815780601f1061125657610100808354040283529160200191611281565b820191906000526020600020905b81548152906001019060200180831161126457829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113235780601f106112f857610100808354040283529160200191611323565b820191906000526020600020905b81548152906001019060200180831161130657829003601f168201915b505050505081526020016004820154815250509050611341565b8090505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6113a5611346565b6113e4576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016113db90612489565b60405180910390fd5b81818080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506002816040516114399190612297565b908152602001604051809103902060010160009054906101000a900460ff16611497576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161148e90612449565b60405180910390fd5b6001600284846040516114ab92919061227e565b908152602001604051809103902060000154815481106114c757fe5b9060005260206000209060050201600080820160006114e69190611924565b6001820160006114f69190611924565b6002820160006115069190611924565b6003820160006115169190611924565b600482016000905550506002838360405161153292919061227e565b90815260200160405180910390206000808201600090556001820160006101000a81549060ff02191690555050828260405161156f92919061227e565b60405180910390207f667378d5061e84f0e8940230e3022c567aa1d8c2e425ee81aace26e7d8d6eaa460405160405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611618576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161160f906123e9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c7c30d4a0f08950cb23be4132957b357fa5dfdb0fcf218f81b86a1c036e47d060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600180549050600282600001516040516116f09190612297565b90815260200160405180910390206000018190555060016002826000015160405161171b9190612297565b908152602001604051809103902060010160006101000a81548160ff0219169083151502179055506001819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908051906020019061178b92919061196c565b5060208201518160010190805190602001906117a892919061196c565b5060408201518160020190805190602001906117c592919061196c565b5060608201518160030190805190602001906117e292919061196c565b5060808201518160040155505080600001516040516118019190612297565b60405180910390207f3a092fad231e05e29f7061a78203ceb4110c59c67d0a2f0d1b4ccb2fe25ecc90826020015183604001518460600151856080015160405161184e949392919061234f565b60405180910390a250565b6040518060400160405280600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118b657803560ff19168380011785556118e4565b828001600101855582156118e4579182015b828111156118e35782358255916020019190600101906118c8565b5b5090506118f191906119ec565b5090565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600081525090565b50805460018160011615610100020316600290046000825580601f1061194a5750611969565b601f01602090049060005260206000209081019061196891906119ec565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106119ad57805160ff19168380011785556119db565b828001600101855582156119db579182015b828111156119da5782518255916020019190600101906119bf565b5b5090506119e891906119ec565b5090565b611a0e91905b80821115611a0a5760008160009055506001016119f2565b5090565b90565b600081359050611a2081612632565b92915050565b60008083601f840112611a3857600080fd5b8235905067ffffffffffffffff811115611a5157600080fd5b602083019150836001820283011115611a6957600080fd5b9250929050565b600082601f830112611a8157600080fd5b8135611a94611a8f82612533565b612506565b91508082526020830160208301858383011115611ab057600080fd5b611abb8382846125df565b50505092915050565b600081359050611ad381612649565b92915050565b600060208284031215611aeb57600080fd5b6000611af984828501611a11565b91505092915050565b60008060208385031215611b1557600080fd5b600083013567ffffffffffffffff811115611b2f57600080fd5b611b3b85828601611a26565b92509250509250929050565b600080600080600080600080600060a08a8c031215611b6557600080fd5b60008a013567ffffffffffffffff811115611b7f57600080fd5b611b8b8c828d01611a26565b995099505060208a013567ffffffffffffffff811115611baa57600080fd5b611bb68c828d01611a26565b975097505060408a013567ffffffffffffffff811115611bd557600080fd5b611be18c828d01611a26565b955095505060608a013567ffffffffffffffff811115611c0057600080fd5b611c0c8c828d01611a26565b93509350506080611c1f8c828d01611ac4565b9150509295985092959850929598565b60008060008060008060006080888a031215611c4a57600080fd5b600088013567ffffffffffffffff811115611c6457600080fd5b611c708a828b01611a26565b9750975050602088013567ffffffffffffffff811115611c8f57600080fd5b611c9b8a828b01611a26565b9550955050604088013567ffffffffffffffff811115611cba57600080fd5b611cc68a828b01611a26565b93509350506060611cd98a828b01611ac4565b91505092959891949750929550565b600060208284031215611cfa57600080fd5b600082013567ffffffffffffffff811115611d1457600080fd5b611d2084828501611a70565b91505092915050565b600060208284031215611d3b57600080fd5b6000611d4984828501611ac4565b91505092915050565b611d5b81612597565b82525050565b611d6a816125a9565b82525050565b6000611d7c838561257b565b9350611d898385846125df565b611d9283612621565b840190509392505050565b6000611da9838561258c565b9350611db68385846125df565b82840190509392505050565b6000611dcd8261255f565b611dd7818561256a565b9350611de78185602086016125ee565b611df081612621565b840191505092915050565b6000611e068261255f565b611e10818561257b565b9350611e208185602086016125ee565b611e2981612621565b840191505092915050565b6000611e3f8261255f565b611e49818561258c565b9350611e598185602086016125ee565b80840191505092915050565b6000611e7260338361257b565b91507f69536572766963654d61726b657445783a20736572766963652070726f76696460008301527f65722063616e206e6f7420626520656d707479000000000000000000000000006020830152604082019050919050565b6000611ed860328361257b565b91507f69536572766963654d61726b657445783a207365727669636520736368656d6160008301527f732063616e206e6f7420626520656d70747900000000000000000000000000006020830152604082019050919050565b6000611f3e60268361257b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611fa4602e8361257b565b91507f69536572766963654d61726b657445783a20736572766963652066656520636160008301527f6e206e6f7420626520656d7074790000000000000000000000000000000000006020830152604082019050919050565b600061200a602f8361257b565b91507f69536572766963654d61726b657445783a2073657276696365206e616d65206360008301527f616e206e6f7420626520656d70747900000000000000000000000000000000006020830152604082019050919050565b600061207060308361257b565b91507f69536572766963654d61726b657445783a20736572766963652062696e64696e60008301527f6720646f6573206e6f74206578697374000000000000000000000000000000006020830152604082019050919050565b60006120d6602e8361257b565b91507f69536572766963654d61726b657445783a20716f732073686f756c642062652060008301527f67726561746572207468616e20300000000000000000000000000000000000006020830152604082019050919050565b600061213c60208361257b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061217c60308361257b565b91507f69536572766963654d61726b657445783a20736572766963652062696e64696e60008301527f6720616c726561647920657869737473000000000000000000000000000000006020830152604082019050919050565b600060a08301600083015184820360008601526121f28282611dc2565b9150506020830151848203602086015261220c8282611dc2565b915050604083015184820360408601526122268282611dc2565b915050606083015184820360608601526122408282611dc2565b91505060808301516122556080860182612260565b508091505092915050565b612269816125d5565b82525050565b612278816125d5565b82525050565b600061228b828486611d9d565b91508190509392505050565b60006122a38284611e34565b915081905092915050565b60006020820190506122c36000830184611d52565b92915050565b60006020820190506122de6000830184611d61565b92915050565b600060608201905081810360008301526122ff818789611d70565b90508181036020830152612314818587611d70565b9050612323604083018461226f565b9695505050505050565b600060208201905081810360008301526123478184611dfb565b905092915050565b600060808201905081810360008301526123698187611dfb565b9050818103602083015261237d8186611dfb565b905081810360408301526123918185611dfb565b90506123a0606083018461226f565b95945050505050565b600060208201905081810360008301526123c281611e65565b9050919050565b600060208201905081810360008301526123e281611ecb565b9050919050565b6000602082019050818103600083015261240281611f31565b9050919050565b6000602082019050818103600083015261242281611f97565b9050919050565b6000602082019050818103600083015261244281611ffd565b9050919050565b6000602082019050818103600083015261246281612063565b9050919050565b60006020820190508181036000830152612482816120c9565b9050919050565b600060208201905081810360008301526124a28161212f565b9050919050565b600060208201905081810360008301526124c28161216f565b9050919050565b600060208201905081810360008301526124e381846121d5565b905092915050565b6000602082019050612500600083018461226f565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561252957600080fd5b8060405250919050565b600067ffffffffffffffff82111561254a57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006125a2826125b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561260c5780820151818401526020810190506125f1565b8381111561261b576000848401525b50505050565b6000601f19601f8301169050919050565b61263b81612597565b811461264657600080fd5b50565b612652816125d5565b811461265d57600080fd5b5056fea2646970667358221220ce9b34daa058dc24fca0f82e1c19370e744a3a0dc9cf7134631f456e78e5e26f64736f6c634300060a0033"

// DeployIServiceMarketEx deploys a new contract, binding an instance of IServiceMarketEx to it.
func DeployIServiceMarketEx(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *IServiceMarketEx, error) {
	parsed, err := abi.JSON(strings.NewReader(IServiceMarketExABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(IServiceMarketExBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &IServiceMarketEx{IServiceMarketExCaller: IServiceMarketExCaller{contract: contract}, IServiceMarketExTransactor: IServiceMarketExTransactor{contract: contract}, IServiceMarketExFilterer: IServiceMarketExFilterer{contract: contract}}, nil
}

func AsyncDeployIServiceMarketEx(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(IServiceMarketExABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(IServiceMarketExBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// IServiceMarketEx is an auto generated Go binding around a Solidity contract.
type IServiceMarketEx struct {
	IServiceMarketExCaller     // Read-only binding to the contract
	IServiceMarketExTransactor // Write-only binding to the contract
	IServiceMarketExFilterer   // Log filterer for contract events
}

// IServiceMarketExCaller is an auto generated read-only Go binding around a Solidity contract.
type IServiceMarketExCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IServiceMarketExTransactor is an auto generated write-only Go binding around a Solidity contract.
type IServiceMarketExTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IServiceMarketExFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type IServiceMarketExFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IServiceMarketExSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type IServiceMarketExSession struct {
	Contract     *IServiceMarketEx // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IServiceMarketExCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type IServiceMarketExCallerSession struct {
	Contract *IServiceMarketExCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// IServiceMarketExTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type IServiceMarketExTransactorSession struct {
	Contract     *IServiceMarketExTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// IServiceMarketExRaw is an auto generated low-level Go binding around a Solidity contract.
type IServiceMarketExRaw struct {
	Contract *IServiceMarketEx // Generic contract binding to access the raw methods on
}

// IServiceMarketExCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type IServiceMarketExCallerRaw struct {
	Contract *IServiceMarketExCaller // Generic read-only contract binding to access the raw methods on
}

// IServiceMarketExTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type IServiceMarketExTransactorRaw struct {
	Contract *IServiceMarketExTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIServiceMarketEx creates a new instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketEx(address common.Address, backend bind.ContractBackend) (*IServiceMarketEx, error) {
	contract, err := bindIServiceMarketEx(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketEx{IServiceMarketExCaller: IServiceMarketExCaller{contract: contract}, IServiceMarketExTransactor: IServiceMarketExTransactor{contract: contract}, IServiceMarketExFilterer: IServiceMarketExFilterer{contract: contract}}, nil
}

// NewIServiceMarketExCaller creates a new read-only instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketExCaller(address common.Address, caller bind.ContractCaller) (*IServiceMarketExCaller, error) {
	contract, err := bindIServiceMarketEx(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExCaller{contract: contract}, nil
}

// NewIServiceMarketExTransactor creates a new write-only instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketExTransactor(address common.Address, transactor bind.ContractTransactor) (*IServiceMarketExTransactor, error) {
	contract, err := bindIServiceMarketEx(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExTransactor{contract: contract}, nil
}

// NewIServiceMarketExFilterer creates a new log filterer instance of IServiceMarketEx, bound to a specific deployed contract.
func NewIServiceMarketExFilterer(address common.Address, filterer bind.ContractFilterer) (*IServiceMarketExFilterer, error) {
	contract, err := bindIServiceMarketEx(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExFilterer{contract: contract}, nil
}

// bindIServiceMarketEx binds a generic wrapper to an already deployed contract.
func bindIServiceMarketEx(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IServiceMarketExABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IServiceMarketEx *IServiceMarketExRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IServiceMarketEx.Contract.IServiceMarketExCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IServiceMarketEx *IServiceMarketExRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.IServiceMarketExTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IServiceMarketEx *IServiceMarketExRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.IServiceMarketExTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IServiceMarketEx *IServiceMarketExCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IServiceMarketEx.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IServiceMarketEx *IServiceMarketExTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IServiceMarketEx *IServiceMarketExTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.contract.Transact(opts, method, params...)
}

// GetQoS is a free data retrieval call binding the contract method 0x06593547.
//
// Solidity: function GetQoS(string _serviceName) constant returns(uint256 qos)
func (_IServiceMarketEx *IServiceMarketExCaller) GetQoS(opts *bind.CallOpts, _serviceName string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "GetQoS", _serviceName)
	return *ret0, err
}

// GetQoS is a free data retrieval call binding the contract method 0x06593547.
//
// Solidity: function GetQoS(string _serviceName) constant returns(uint256 qos)
func (_IServiceMarketEx *IServiceMarketExSession) GetQoS(_serviceName string) (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetQoS(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetQoS is a free data retrieval call binding the contract method 0x06593547.
//
// Solidity: function GetQoS(string _serviceName) constant returns(uint256 qos)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetQoS(_serviceName string) (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetQoS(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceBinding is a free data retrieval call binding the contract method 0xc6a9fbec.
//
// Solidity: function GetServiceBinding(string _serviceName) constant returns(iServiceMarketExServiceBinding binding)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceBinding(opts *bind.CallOpts, _serviceName string) (iServiceMarketExServiceBinding, error) {
	var (
		ret0 = new(iServiceMarketExServiceBinding)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "GetServiceBinding", _serviceName)
	return *ret0, err
}

// GetServiceBinding is a free data retrieval call binding the contract method 0xc6a9fbec.
//
// Solidity: function GetServiceBinding(string _serviceName) constant returns(iServiceMarketExServiceBinding binding)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceBinding(_serviceName string) (iServiceMarketExServiceBinding, error) {
	return _IServiceMarketEx.Contract.GetServiceBinding(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceBinding is a free data retrieval call binding the contract method 0xc6a9fbec.
//
// Solidity: function GetServiceBinding(string _serviceName) constant returns(iServiceMarketExServiceBinding binding)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceBinding(_serviceName string) (iServiceMarketExServiceBinding, error) {
	return _IServiceMarketEx.Contract.GetServiceBinding(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceBindingByIndex is a free data retrieval call binding the contract method 0xcbb950e4.
//
// Solidity: function GetServiceBindingByIndex(uint256 _index) constant returns(iServiceMarketExServiceBinding binding)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceBindingByIndex(opts *bind.CallOpts, _index *big.Int) (iServiceMarketExServiceBinding, error) {
	var (
		ret0 = new(iServiceMarketExServiceBinding)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "GetServiceBindingByIndex", _index)
	return *ret0, err
}

// GetServiceBindingByIndex is a free data retrieval call binding the contract method 0xcbb950e4.
//
// Solidity: function GetServiceBindingByIndex(uint256 _index) constant returns(iServiceMarketExServiceBinding binding)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceBindingByIndex(_index *big.Int) (iServiceMarketExServiceBinding, error) {
	return _IServiceMarketEx.Contract.GetServiceBindingByIndex(&_IServiceMarketEx.CallOpts, _index)
}

// GetServiceBindingByIndex is a free data retrieval call binding the contract method 0xcbb950e4.
//
// Solidity: function GetServiceBindingByIndex(uint256 _index) constant returns(iServiceMarketExServiceBinding binding)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceBindingByIndex(_index *big.Int) (iServiceMarketExServiceBinding, error) {
	return _IServiceMarketEx.Contract.GetServiceBindingByIndex(&_IServiceMarketEx.CallOpts, _index)
}

// GetServiceBindingCount is a free data retrieval call binding the contract method 0x8fd4d350.
//
// Solidity: function GetServiceBindingCount() constant returns(uint256 count)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceBindingCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "GetServiceBindingCount")
	return *ret0, err
}

// GetServiceBindingCount is a free data retrieval call binding the contract method 0x8fd4d350.
//
// Solidity: function GetServiceBindingCount() constant returns(uint256 count)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceBindingCount() (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetServiceBindingCount(&_IServiceMarketEx.CallOpts)
}

// GetServiceBindingCount is a free data retrieval call binding the contract method 0x8fd4d350.
//
// Solidity: function GetServiceBindingCount() constant returns(uint256 count)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceBindingCount() (*big.Int, error) {
	return _IServiceMarketEx.Contract.GetServiceBindingCount(&_IServiceMarketEx.CallOpts)
}

// GetServiceFee is a free data retrieval call binding the contract method 0x39fb59e0.
//
// Solidity: function GetServiceFee(string _serviceName) constant returns(string fee)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceFee(opts *bind.CallOpts, _serviceName string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "GetServiceFee", _serviceName)
	return *ret0, err
}

// GetServiceFee is a free data retrieval call binding the contract method 0x39fb59e0.
//
// Solidity: function GetServiceFee(string _serviceName) constant returns(string fee)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceFee(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceFee(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceFee is a free data retrieval call binding the contract method 0x39fb59e0.
//
// Solidity: function GetServiceFee(string _serviceName) constant returns(string fee)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceFee(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceFee(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceProvider is a free data retrieval call binding the contract method 0x347f33d7.
//
// Solidity: function GetServiceProvider(string _serviceName) constant returns(string provider)
func (_IServiceMarketEx *IServiceMarketExCaller) GetServiceProvider(opts *bind.CallOpts, _serviceName string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "GetServiceProvider", _serviceName)
	return *ret0, err
}

// GetServiceProvider is a free data retrieval call binding the contract method 0x347f33d7.
//
// Solidity: function GetServiceProvider(string _serviceName) constant returns(string provider)
func (_IServiceMarketEx *IServiceMarketExSession) GetServiceProvider(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceProvider(&_IServiceMarketEx.CallOpts, _serviceName)
}

// GetServiceProvider is a free data retrieval call binding the contract method 0x347f33d7.
//
// Solidity: function GetServiceProvider(string _serviceName) constant returns(string provider)
func (_IServiceMarketEx *IServiceMarketExCallerSession) GetServiceProvider(_serviceName string) (string, error) {
	return _IServiceMarketEx.Contract.GetServiceProvider(&_IServiceMarketEx.CallOpts, _serviceName)
}

// IsOwner is a free data retrieval call binding the contract method 0xede8e529.
//
// Solidity: function isOwner() constant returns(bool)
func (_IServiceMarketEx *IServiceMarketExCaller) IsOwner(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "isOwner")
	return *ret0, err
}

// IsOwner is a free data retrieval call binding the contract method 0xede8e529.
//
// Solidity: function isOwner() constant returns(bool)
func (_IServiceMarketEx *IServiceMarketExSession) IsOwner() (bool, error) {
	return _IServiceMarketEx.Contract.IsOwner(&_IServiceMarketEx.CallOpts)
}

// IsOwner is a free data retrieval call binding the contract method 0xede8e529.
//
// Solidity: function isOwner() constant returns(bool)
func (_IServiceMarketEx *IServiceMarketExCallerSession) IsOwner() (bool, error) {
	return _IServiceMarketEx.Contract.IsOwner(&_IServiceMarketEx.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x5089e2c8.
//
// Solidity: function owner() constant returns(address)
func (_IServiceMarketEx *IServiceMarketExCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x5089e2c8.
//
// Solidity: function owner() constant returns(address)
func (_IServiceMarketEx *IServiceMarketExSession) Owner() (common.Address, error) {
	return _IServiceMarketEx.Contract.Owner(&_IServiceMarketEx.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x5089e2c8.
//
// Solidity: function owner() constant returns(address)
func (_IServiceMarketEx *IServiceMarketExCallerSession) Owner() (common.Address, error) {
	return _IServiceMarketEx.Contract.Owner(&_IServiceMarketEx.CallOpts)
}

// ServiceBindingExists is a free data retrieval call binding the contract method 0x27e41750.
//
// Solidity: function serviceBindingExists(string _serviceName) constant returns(bool exist)
func (_IServiceMarketEx *IServiceMarketExCaller) ServiceBindingExists(opts *bind.CallOpts, _serviceName string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _IServiceMarketEx.contract.Call(opts, out, "serviceBindingExists", _serviceName)
	return *ret0, err
}

// ServiceBindingExists is a free data retrieval call binding the contract method 0x27e41750.
//
// Solidity: function serviceBindingExists(string _serviceName) constant returns(bool exist)
func (_IServiceMarketEx *IServiceMarketExSession) ServiceBindingExists(_serviceName string) (bool, error) {
	return _IServiceMarketEx.Contract.ServiceBindingExists(&_IServiceMarketEx.CallOpts, _serviceName)
}

// ServiceBindingExists is a free data retrieval call binding the contract method 0x27e41750.
//
// Solidity: function serviceBindingExists(string _serviceName) constant returns(bool exist)
func (_IServiceMarketEx *IServiceMarketExCallerSession) ServiceBindingExists(_serviceName string) (bool, error) {
	return _IServiceMarketEx.Contract.ServiceBindingExists(&_IServiceMarketEx.CallOpts, _serviceName)
}

// AddServiceBinding is a paid mutator transaction binding the contract method 0x7b6397fa.
//
// Solidity: function addServiceBinding(string _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) AddServiceBinding(opts *bind.TransactOpts, _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "addServiceBinding", _serviceName, _schemas, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncAddServiceBinding(handler func(*types.Receipt, error), opts *bind.TransactOpts, _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "addServiceBinding", _serviceName, _schemas, _provider, _serviceFee, _qos)
}

// AddServiceBinding is a paid mutator transaction binding the contract method 0x7b6397fa.
//
// Solidity: function addServiceBinding(string _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExSession) AddServiceBinding(_serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.AddServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncAddServiceBinding(handler func(*types.Receipt, error), _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncAddServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

// AddServiceBinding is a paid mutator transaction binding the contract method 0x7b6397fa.
//
// Solidity: function addServiceBinding(string _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) AddServiceBinding(_serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.AddServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncAddServiceBinding(handler func(*types.Receipt, error), _serviceName string, _schemas string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncAddServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _schemas, _provider, _serviceFee, _qos)
}

// RemoveServiceBinding is a paid mutator transaction binding the contract method 0xf10b3735.
//
// Solidity: function removeServiceBinding(string _serviceName) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) RemoveServiceBinding(opts *bind.TransactOpts, _serviceName string) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "removeServiceBinding", _serviceName)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncRemoveServiceBinding(handler func(*types.Receipt, error), opts *bind.TransactOpts, _serviceName string) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "removeServiceBinding", _serviceName)
}

// RemoveServiceBinding is a paid mutator transaction binding the contract method 0xf10b3735.
//
// Solidity: function removeServiceBinding(string _serviceName) returns()
func (_IServiceMarketEx *IServiceMarketExSession) RemoveServiceBinding(_serviceName string) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.RemoveServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncRemoveServiceBinding(handler func(*types.Receipt, error), _serviceName string) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncRemoveServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName)
}

// RemoveServiceBinding is a paid mutator transaction binding the contract method 0xf10b3735.
//
// Solidity: function removeServiceBinding(string _serviceName) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) RemoveServiceBinding(_serviceName string) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.RemoveServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncRemoveServiceBinding(handler func(*types.Receipt, error), _serviceName string) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncRemoveServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x16cad12a.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "transferOwnership", newOwner)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncTransferOwnership(handler func(*types.Receipt, error), opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x16cad12a.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_IServiceMarketEx *IServiceMarketExSession) TransferOwnership(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.TransferOwnership(&_IServiceMarketEx.TransactOpts, newOwner)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncTransferOwnership(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncTransferOwnership(handler, &_IServiceMarketEx.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x16cad12a.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.TransferOwnership(&_IServiceMarketEx.TransactOpts, newOwner)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncTransferOwnership(handler func(*types.Receipt, error), newOwner common.Address) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncTransferOwnership(handler, &_IServiceMarketEx.TransactOpts, newOwner)
}

// UpdateServiceBinding is a paid mutator transaction binding the contract method 0x47b71720.
//
// Solidity: function updateServiceBinding(string _serviceName, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactor) UpdateServiceBinding(opts *bind.TransactOpts, _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.contract.Transact(opts, "updateServiceBinding", _serviceName, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactor) AsyncUpdateServiceBinding(handler func(*types.Receipt, error), opts *bind.TransactOpts, _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.contract.AsyncTransact(opts, handler, "updateServiceBinding", _serviceName, _provider, _serviceFee, _qos)
}

// UpdateServiceBinding is a paid mutator transaction binding the contract method 0x47b71720.
//
// Solidity: function updateServiceBinding(string _serviceName, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExSession) UpdateServiceBinding(_serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.UpdateServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExSession) AsyncUpdateServiceBinding(handler func(*types.Receipt, error), _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncUpdateServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

// UpdateServiceBinding is a paid mutator transaction binding the contract method 0x47b71720.
//
// Solidity: function updateServiceBinding(string _serviceName, string _provider, string _serviceFee, uint256 _qos) returns()
func (_IServiceMarketEx *IServiceMarketExTransactorSession) UpdateServiceBinding(_serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _IServiceMarketEx.Contract.UpdateServiceBinding(&_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

func (_IServiceMarketEx *IServiceMarketExTransactorSession) AsyncUpdateServiceBinding(handler func(*types.Receipt, error), _serviceName string, _provider string, _serviceFee string, _qos *big.Int) (*types.Transaction, error) {
	return _IServiceMarketEx.Contract.AsyncUpdateServiceBinding(handler, &_IServiceMarketEx.TransactOpts, _serviceName, _provider, _serviceFee, _qos)
}

// IServiceMarketExOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the IServiceMarketEx contract.
type IServiceMarketExOwnershipTransferredIterator struct {
	Event *IServiceMarketExOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExOwnershipTransferred represents a OwnershipTransferred event raised by the IServiceMarketEx contract.
type IServiceMarketExOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x000000000000000000000000000000000000000000000000000000005c7c30d4.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*IServiceMarketExOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExOwnershipTransferredIterator{contract: _IServiceMarketEx.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x000000000000000000000000000000000000000000000000000000005c7c30d4.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *IServiceMarketExOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExOwnershipTransferred)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x000000000000000000000000000000000000000000000000000000005c7c30d4.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseOwnershipTransferred(log types.Log) (*IServiceMarketExOwnershipTransferred, error) {
	event := new(IServiceMarketExOwnershipTransferred)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	return event, nil
}

// IServiceMarketExServiceBindingAddedIterator is returned from FilterServiceBindingAdded and is used to iterate over the raw logs and unpacked data for ServiceBindingAdded events raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingAddedIterator struct {
	Event *IServiceMarketExServiceBindingAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExServiceBindingAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExServiceBindingAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExServiceBindingAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExServiceBindingAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExServiceBindingAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExServiceBindingAdded represents a ServiceBindingAdded event raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingAdded struct {
	ServiceName common.Hash
	Schemas     string
	Provider    string
	ServiceFee  string
	Qos         *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterServiceBindingAdded is a free log retrieval operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000021bc4ee.
//
// Solidity: event ServiceBindingAdded(string indexed _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterServiceBindingAdded(opts *bind.FilterOpts, _serviceName []string) (*IServiceMarketExServiceBindingAddedIterator, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "ServiceBindingAdded", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExServiceBindingAddedIterator{contract: _IServiceMarketEx.contract, event: "ServiceBindingAdded", logs: logs, sub: sub}, nil
}

// WatchServiceBindingAdded is a free log subscription operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000021bc4ee.
//
// Solidity: event ServiceBindingAdded(string indexed _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchServiceBindingAdded(opts *bind.WatchOpts, sink chan<- *IServiceMarketExServiceBindingAdded, _serviceName []string) (event.Subscription, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "ServiceBindingAdded", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExServiceBindingAdded)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceBindingAdded is a log parse operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000021bc4ee.
//
// Solidity: event ServiceBindingAdded(string indexed _serviceName, string _schemas, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseServiceBindingAdded(log types.Log) (*IServiceMarketExServiceBindingAdded, error) {
	event := new(IServiceMarketExServiceBindingAdded)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// IServiceMarketExServiceBindingRemovedIterator is returned from FilterServiceBindingRemoved and is used to iterate over the raw logs and unpacked data for ServiceBindingRemoved events raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingRemovedIterator struct {
	Event *IServiceMarketExServiceBindingRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExServiceBindingRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExServiceBindingRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExServiceBindingRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExServiceBindingRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExServiceBindingRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExServiceBindingRemoved represents a ServiceBindingRemoved event raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingRemoved struct {
	ServiceName common.Hash
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterServiceBindingRemoved is a free log retrieval operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000667378d5.
//
// Solidity: event ServiceBindingRemoved(string indexed _serviceName)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterServiceBindingRemoved(opts *bind.FilterOpts, _serviceName []string) (*IServiceMarketExServiceBindingRemovedIterator, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "ServiceBindingRemoved", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExServiceBindingRemovedIterator{contract: _IServiceMarketEx.contract, event: "ServiceBindingRemoved", logs: logs, sub: sub}, nil
}

// WatchServiceBindingRemoved is a free log subscription operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000667378d5.
//
// Solidity: event ServiceBindingRemoved(string indexed _serviceName)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchServiceBindingRemoved(opts *bind.WatchOpts, sink chan<- *IServiceMarketExServiceBindingRemoved, _serviceName []string) (event.Subscription, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "ServiceBindingRemoved", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExServiceBindingRemoved)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceBindingRemoved is a log parse operation binding the contract event 0x00000000000000000000000000000000000000000000000000000000667378d5.
//
// Solidity: event ServiceBindingRemoved(string indexed _serviceName)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseServiceBindingRemoved(log types.Log) (*IServiceMarketExServiceBindingRemoved, error) {
	event := new(IServiceMarketExServiceBindingRemoved)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// IServiceMarketExServiceBindingUpdatedIterator is returned from FilterServiceBindingUpdated and is used to iterate over the raw logs and unpacked data for ServiceBindingUpdated events raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingUpdatedIterator struct {
	Event *IServiceMarketExServiceBindingUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *IServiceMarketExServiceBindingUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(IServiceMarketExServiceBindingUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(IServiceMarketExServiceBindingUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *IServiceMarketExServiceBindingUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *IServiceMarketExServiceBindingUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// IServiceMarketExServiceBindingUpdated represents a ServiceBindingUpdated event raised by the IServiceMarketEx contract.
type IServiceMarketExServiceBindingUpdated struct {
	ServiceName common.Hash
	Provider    string
	ServiceFee  string
	Qos         *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterServiceBindingUpdated is a free log retrieval operation binding the contract event 0x000000000000000000000000000000000000000000000000000000007a7669f9.
//
// Solidity: event ServiceBindingUpdated(string indexed _serviceName, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) FilterServiceBindingUpdated(opts *bind.FilterOpts, _serviceName []string) (*IServiceMarketExServiceBindingUpdatedIterator, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.FilterLogs(opts, "ServiceBindingUpdated", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return &IServiceMarketExServiceBindingUpdatedIterator{contract: _IServiceMarketEx.contract, event: "ServiceBindingUpdated", logs: logs, sub: sub}, nil
}

// WatchServiceBindingUpdated is a free log subscription operation binding the contract event 0x000000000000000000000000000000000000000000000000000000007a7669f9.
//
// Solidity: event ServiceBindingUpdated(string indexed _serviceName, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) WatchServiceBindingUpdated(opts *bind.WatchOpts, sink chan<- *IServiceMarketExServiceBindingUpdated, _serviceName []string) (event.Subscription, error) {

	var _serviceNameRule []interface{}
	for _, _serviceNameItem := range _serviceName {
		_serviceNameRule = append(_serviceNameRule, _serviceNameItem)
	}

	logs, sub, err := _IServiceMarketEx.contract.WatchLogs(opts, "ServiceBindingUpdated", _serviceNameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(IServiceMarketExServiceBindingUpdated)
				if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseServiceBindingUpdated is a log parse operation binding the contract event 0x000000000000000000000000000000000000000000000000000000007a7669f9.
//
// Solidity: event ServiceBindingUpdated(string indexed _serviceName, string _provider, string _serviceFee, uint256 _qos)
func (_IServiceMarketEx *IServiceMarketExFilterer) ParseServiceBindingUpdated(log types.Log) (*IServiceMarketExServiceBindingUpdated, error) {
	event := new(IServiceMarketExServiceBindingUpdated)
	if err := _IServiceMarketEx.contract.UnpackLog(event, "ServiceBindingUpdated", log); err != nil {
		return nil, err
	}
	return event, nil
}
